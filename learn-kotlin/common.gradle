// overrides default "/build"
buildDir file("/target")

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

ext {
    ktLintOpts = [
        "--reporter=plain",
        "--reporter=checkstyle,output=$buildDir\\ktlint-report.xml"
    ]
    classesDir = file("${buildDir}/classes")
    
    kotlinMain = "Main"
    if (project.hasProperty("mainClassName") && mainClassName?.trim()) kotlinMain = mainClassName

    javaMain = "Main"
    if (project.hasProperty("javaMainClassName") && javaMainClassName?.trim()) javaMain = javaMainClassName
}

sourceSets {
    // Default: srcDirs "src/main/kotlin"
	main.kotlin.srcDirs "src/main/kotlin"
}

clean.doLast {
    buildDir.deleteDir()
}

task lint(type: JavaExec) {
    description "Analyze Kotlin source files with KtLint"
    main "-jar"
    args files("$ktLintJar") + ktLintOpts + sourceSets.main.allSource.files
}

checkstyle {
    maxErrors = 10
}

compileKotlin {
    // dependsOn lint

    description "Compile Kotlin source files"

    kotlinOptions {
        // Tool options
        // suppressWarnings = true
        // verbose = false
        // Common options
        apiVersion = "1.4"
        languageVersion = "1.4"
        // JVM options
        jvmTarget = "1.8"
    }
}

compileKotlin.doFirst {
    if (!classesDir.exists()) classesDir.mkdirs()
}

build {
    dependsOn compileKotlin
}

// see https://github.com/Kotlin/dokka#using-dokka
dokka {
    outputDirectory = "$buildDir/dokka"
    outputFormat = "html"
}

task run(type: JavaExec) {
    dependsOn compileKotlin

    description "Execute Kotlin main class $kotlinMain"

    classpath sourceSets.main.runtimeClasspath

    main kotlinMain
    if (args == null) args ""
}

task runJava(type: JavaExec) {
    doFirst {
        println()
    }
    description "Execute Java main class $javaMain"

    classpath sourceSets.main.runtimeClasspath

    main javaMain
    if (args == null) args ""
}

repositories {
    mavenCentral()
    maven {
        url "https://dl.bintray.com/kotlin/kotlin-dev"
    }
    maven { // dokka-gradle-plugin
        url "https://repo.spring.io/libs-release"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaPluginVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    api "junit:junit:$junitVersion"
    testImplementation "junit:junit:$junitVersion"
}
